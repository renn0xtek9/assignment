@startuml
box Flight Software
    entity OdometryApp
    entity IMUMessageQueue
    entity IMUDriver
end box

box Operating System
    entity DeviceFile
    entity Kernel
    entity UART
end box
entity IMU

group Queuing a measurement
    activate IMUDriver #LightGreen

    loop frequent poll
    IMUDriver -> Kernel: poll for bytes available
    Kernel -> IMUDriver: No bytes available
    end

    rnote over IMU
        t_mes1
    endrnote
    IMU -> UART: Send start bit
    loop 8 times
        IMU -> UART: Send bits of start byte.
    end
    IMU -> UART: Sent stop bit
    Kernel -> Kernel: Bits to byte assembly
    Kernel -> DeviceFile: Write start byte

    deactivate IMUDriver
    IMUDriver -> Kernel: poll for bytes available
    Kernel -> IMUDriver: 1 byte available

    DeviceFile -> IMUDriver: Read start byte
    IMUDriver -> Kernel: Poll clock time

    rnote over IMUDriver
        Timestamp retrieved
    endrnote

    IMU -> UART: Send first bit of message
    activate IMUDriver #LightBlue
    UART -> Kernel: Receive first bit
    loop 14 times
        loop 8 times
            IMU -> UART: Send bits
            UART -> Kernel: Receive bits
            Kernel -> Kernel: Bits to byte assembly
            rnote over IMU
                Send all bits of the message
            endrnote
        end
        Kernel -> DeviceFile: Write byte
    end
    deactivate IMUDriver

    activate IMUDriver #LightGreen
    DeviceFile -> IMUDriver: Read all bytes

    IMUDriver ->IMUDriver: Reconstruct IMU message from bytes
    IMUDriver -> IMUMessageQueue: Lock the  memory resource
    activate IMUMessageQueue #Red
    IMUDriver -> IMUMessageQueue: Enqueue message to queue
    IMUDriver -> IMUMessageQueue: Release the memory resource
    deactivate IMUMessageQueue

    deactivate IMUDriver
end
loop Process "Queuing a measurement" repeated x times
    rnote over IMU
        t_mes2
    endrnote
    IMU --> IMUDriver: Send data

    activate IMUMessageQueue #Red
    IMUDriver --> IMUMessageQueue: Enqueue message to queue
    deactivate IMUMessageQueue
end

OdometryApp -> IMUMessageQueue: Lock the memory resource
activate IMUMessageQueue #Red
OdometryApp -> IMUMessageQueue: Purge the queue
OdometryApp -> IMUMessageQueue: Release the memory resource
deactivate IMUMessageQueue

@enduml
